{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"hCNV Reference Resources","text":""},{"location":"#data-tools-for-hcnv-analysis-with-a-focus-on-the-distributed-normal","title":"Data &amp; tools for hCNV analysis with a focus on the distributed normal","text":"<p>The site was started as a project of the ELIXIR hCNV Community at the Biohackathon Europe 2023:</p> <p>A \"batteries-included\" open reference resource for human genomic copy number variants (CNV)</p>"},{"location":"beacon-queries/","title":"Beacon CNV Queries","text":"<p>! hint \"Beacon Project Query Documentation\"</p> <pre><code>The Beacon [project's documentation](http://docs.genomebeacons.org/variant-queries/#beacon-range-queries) includes examples for current queries enabling\ndiscovery of CNVs (in resources supporting these formats).\n</code></pre> <p>TBD</p>"},{"location":"data-resources/","title":"hCNV Reference Data Resources","text":""},{"location":"data-resources/#1000-genomes-dragen","title":"1000 Genomes Dragen","text":"<p>While primarily focused on somatic variants from cancer genomics the Progenetix resource also contains CNV data from the 1000 Genomes Project.</p> <ul> <li>1000 Genomes CNV at Progenetix</li> </ul> <p>TBD</p>"},{"location":"parameters-and-mappings/","title":"hCNV Parameters and Mappings to Output format","text":""},{"location":"parameters-and-mappings/#collected-parameters","title":"Collected Parameters","text":"<p>TBD</p>"},{"location":"parameters-and-mappings/#parameter-output-mappings","title":"Parameter Output Mappings","text":""},{"location":"parameters-and-mappings/#beacon-v2-default-model-for-genomicvariation","title":"Beacon v2 Default Model for <code>genomicVariation</code>","text":"<ul> <li>Beacon v2 default model source</li> <li>Beacon v2 default model documentation</li> </ul> <p>Beacon v2 provides a default model with its main data entities <code>individual</code>, <code>biosample</code>, <code>analysis</code>, <code>run</code> and <code>genomicVariation</code>. The parameters needed for an hCNV reference resource potentially map to all of those entities; e.g.</p> <ul> <li>donor sex  =&gt; <code>individual.sex</code></li> </ul>"},{"location":"parameters-and-mappings/#progenetix-bycon-parameter-mappings","title":"Progenetix <code>bycon</code> parameter mappings","text":"<p>The Progenetix implementation of the Beacon API - through the <code>bycon</code> stack - closely adheres internally to the Beacon v2 default model. Specifically, records are stored in document formats described in JSON Schema with overall correspondance to the standard Beacon models, and stored in a MongoDB database with per schema collections (<code>individuals</code>, <code>biosamples</code>, <code>callsets</code> and <code>variants</code> as well as helper collections for e.g. ontologies or genome lookups).</p> <p>For data I/O the <code>bycon</code> package contains a mapping file which allows to map data from columnar (i.e. tab delimited) input files to the corresponding attributes in the document schemas.</p>"},{"location":"parameters-and-mappings/#example-bycon-parameter-mappings","title":"Example <code>bycon</code> parameter mappings","text":"<pre><code>  genomicVariant:\n    type: object\n    parameters:\n      variant_id:\n        db_key: id\n        indexed: True\n        compact: True\n        computed: True\n      variant_internal_id:\n        type: string\n        db_key: variant_internal_id\n        indexed: True\n        compact: True\n        computed: True\n      callset_id:\n        description: |\n            The bycon model uses `callset` to store\n            information corresponding to Beacon's `analysis`\n            and `run` entities.\n        type: string\n        db_key: callset_id\n        indexed: True\n        compact: True\n      biosample_id:\n        type: string\n        db_key: biosample_id\n        indexed: True\n        compact: True\n      individual_id:\n        type: string\n        db_key: individual_id\n        indexed: True\n        compact: True\n      sequence_id:\n        type: string\n        db_key: location.sequence_id\n        indexed: True\n        compact: True\n      reference_name:\n        type: string\n        db_key: location.chromosome\n        indexed: True\n        compact: True\n      start:\n        type: integer\n        db_key: location.start\n        indexed: True\n        compact: True\n      end:\n        type: integer\n        db_key: location.end\n        indexed: True\n        compact: True\n      variant_state_id:\n        type: string\n        db_key: variant_state.id\n        indexed: True\n        compact: True\n      variant_state_label:\n        type: string\n        db_key: variant_state.label\n        compact: True\n      reference_bases:\n        type: string\n        db_key: reference_sequence\n        indexed: True\n        compact: True\n      alternate_bases:\n        type: string\n        db_key: sequence\n        indexed: True\n        compact: True\n      annotation_derived:\n        type: boolean\n        db_key: info.annotation_derived\n        default: False\n        indexed: True\n      aminoacid_changes:\n        type: array\n        items: string\n        db_key: molecular_attributes.aminoacid_changes\n        indexed: True\n      genomic_hgvs_id:\n        type: string\n        db_key: identifiers.genomicHGVS_id\n        indexed: True\n\n      # special pgxseg columns\n\n      log2:\n        db_key: info.cnv_value\n        type: number\n      variant_type:\n        type: string\n        db_key: variant_type\n</code></pre>"}]}